name: Build and Deploy Java App

on:
  push:
    branches:
      - master
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Copy jar to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          source: target/*.jar
          target: /home/ec2-user/app/

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
      
      - name: Restart app on EC2
        run: |
          # Crear script de reinicio
          cat > restart_app.sh << 'EOL'
          #!/bin/bash
          # Detener la aplicación actual si está en ejecución
          pkill -f 'java -jar' || echo "No hay procesos Java en ejecución"
          
          # Asegurar que el directorio existe
          mkdir -p /home/ec2-user/app/logs
          
          # Obtener el nombre del JAR más reciente
          JAR_FILE=$(ls -t /home/ec2-user/app/*.jar | head -n 1)
          echo "Iniciando aplicación con: $JAR_FILE"
          
          # Iniciar la aplicación en segundo plano
          cd /home/ec2-user/app
          nohup java -jar $JAR_FILE > /home/ec2-user/app/logs/output.log 2>&1 &
          
          # Esperar unos segundos para asegurar que la aplicación inicie
          sleep 5
          
          # Verificar que la aplicación está en ejecución
          if pgrep -f 'java -jar'; then
            echo "Aplicación iniciada correctamente"
            exit 0
          else
            echo "Error: La aplicación no se inició correctamente"
            exit 1
          fi
          EOL
          
          # Ejecutar el script en el servidor remoto
          cat restart_app.sh | ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} 'bash -s'
